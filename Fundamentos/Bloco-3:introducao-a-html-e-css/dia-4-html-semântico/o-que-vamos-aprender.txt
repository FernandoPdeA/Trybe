O que vamos aprender?
Chegou a hora de entrar mais fundo na Matrix. üòé
Desde que voc√™ come√ßou a fazer uso de elementos HTML, j√° parou para pensar sobre o significado de um elemento? Suponha que voc√™, ao digitar a URL de um site, visualize somente o DOM constru√≠do, e n√£o a renderiza√ß√£o da p√°gina pelo browser. Se voc√™ se deparasse no DOM com um elemento possuindo a tag p, o que voc√™ poderia inferir sobre seu conte√∫do? Voc√™ pode deduzir que o conte√∫do √© textual e possui uma quebra de linha depois do fim do texto, por exemplo. Tudo isso voc√™ conseguiu deduzir olhando somente para a tag p do elemento, chegando assim √† conclus√£o de que o elemento representa um par√°grafo.
Essa representa√ß√£o, esse sentido que um elemento HTML carrega acerca de seu conte√∫do se chama HTML Sem√¢ntico, e √© isto que voc√™ estudar√° na aula de hoje.


Voc√™ ser√° capaz de:
Fazer uso de elementos HTML de acordo com o sentido e o prop√≥sito que eles carregam. Tais elementos incluem, mas n√£o se limitam a: header, nav, aside, article, section, footer e img;
Criar p√°ginas semanticamente v√°lidas e acess√≠veis;
Entender a diferen√ßa entre elementos de bloco e elementos inline.



Por que isso √© importante?
Saber aplicar elementos HTML de acordo com o sentido e o prop√≥sito que cada um deles carrega, al√©m de refor√ßar a sua capacidade para modelagem de um problema, resulta em p√°ginas melhor ranqueadas em motores de busca (e.g. Google) e mais acess√≠veis.


Conte√∫dos
HTML Sem√¢ntico √© o uso do HTML para refor√ßar o significado da informa√ß√£o na p√°gina e n√£o apenas definir sua estrutura e apresenta√ß√£o. Por exemplo, durante esse tempo todo voc√™ fez uso de elementos HTML com as tags html, head, body e form. Esses elementos s√£o exemplos de uso de HTML Sem√¢ntico, pois cada um tem seu conte√∫do com um sentido e prop√≥sito definidos:
html representa o tipo do documento em quest√£o, que nesse caso √© HTML;
head representa os metadados do documento HTML, tais como o t√≠tulo do documento, links para arquivos CSS e JavaScript de que o documento precisa;
body representa todo o conte√∫do visual do documento HTML;
form representa um formul√°rio para que o usu√°rio consiga inserir dados.


Aplicando elementos HTML de acordo com o sentido
Suponha que, no seu dia a dia de desenvolvimento de software, na empresa em que trabalha, voc√™ precise implementar uma funcionalidade de mostrar a foto de perfil do usu√°rio na tela inicial do site da empresa, de forma a prover uma experi√™ncia mais pessoal.
Qual elemento HTML voc√™ usaria para conter a imagem do usu√°rio?
Hum... ü§î
Um candidato ideal para esse caso seria o elemento img, concorda? Voc√™ pode averiguar que img √© um candidato olhando em alguma documenta√ß√£o do HTML.
Voc√™ faz uso de img, finaliza o que precisava fazer para implementar a funcionalidade de mostrar a foto do perfil, abre um Pull Request (PR) e seus colegas de trabalho fazem o Code Review (CR).
Algu√©m no Code Review chega no seu c√≥digo e comenta:
Mas eu poderia fazer a mesma coisa usando div nessa linha! Por que voc√™ usou img?
Qual resposta voc√™ daria? Uma poss√≠vel seria algo do tipo:
Voc√™ tem raz√£o, eu poderia, mas ser√° que faria sentido? Eu usar o elemento img para guardar uma imagem agrega muito mais valor para o documento do que se eu usasse uma div, haja vista que uma div √© um elemento gen√©rico, que serve para agrupar qualquer coisa. Ao usar o elemento img, eu estou comunicando que o conte√∫do √© uma imagem.
Analogamente, suponha que voc√™ precise mostrar para o usu√°rio uma tabela com todas as suas compras. Para cada compra, voc√™ precisa mostrar:
o valor da compra;
a data que a compra foi efetuada;
uma descri√ß√£o da compra.
Qual elemento voc√™ usaria para representar essa tabela? Existe um elemento HTML cujo prop√≥sito √© definir uma tabela, o table.
Agora assista aos v√≠deos a seguir, que v√£o te fazer compreender melhor o que √© e como funciona o HTML Sem√¢ntico.


Elementos de bloco e elementos inline
Para entender como funcionam os elementos de bloco e os elementos inline veja o v√≠deo a seguir:

Agora que voc√™ j√° sabe sobre as propriedades display inline e display block, √© hora de ver sobre a propriedade display inline-block!

Para fixar
Para realizar o exerc√≠cio, leia atentamente o enunciado. Ap√≥s entender o que foi pedido, desenvolva a solu√ß√£o e ent√£o verifique se voc√™ conseguiu cumprir com o que foi solicitado.
1 - Para realizar este exerc√≠cio copie o c√≥digo HTML abaixo. Em seguida, fa√ßa a implementa√ß√£o das propriedades CSS e, se necess√°rio, fa√ßa adi√ß√µes √† estrutura HTML existente, para que o resultado final seja similar √† imagem refer√™ncia.
Lembre-se que a estrutura da p√°gina deve ser mantida para que a sem√¢ntica do c√≥digo seja preservada.

Podium and prizes final structure
index.html
Copiar
<!DOCTYPE html>
<html lang="pt">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ranking</title>
    <style>
      h1 {
        text-align: center;
      }

      .first {
        background-color: rgb(235, 200, 84);
        font-size: 20px;
        height: 50px;
        text-align: center;
        width: 200px;
      }

      .second {
        background-color: rgb(219, 219, 219);
        font-size: 20px;
        height: 50px;
        text-align: center;
        width: 300px;
      }

      .third {
        background-color: rgb(170, 142, 106);
        font-size: 20px;
        height: 50px;
        text-align: center;
        width: 300px;
      }

    </style>
  </head>
  <body>
    <header>
      <h1>Hackathon Results</h1>
    </header>
    <section>
      <ul>
        <li class="first">1¬∫ - Equipe 1</li>
        <li class="second">2¬∫ - Equipe 2</li>
        <li class="third">3¬∫ - Equipe 3</li>
      </ul>
    </section>
    <section>
      <h3>Premia√ß√£o Primeiro Lugar:</h3>
      <ul>
        <li>| R$ 1000,00 por integrante da equipe |</li>
        <li>| Bootcamp de 2 meses com possibilidade de contrata√ß√£o |</li>
      </ul>
      <h3>Premia√ß√£o Segundo Lugar:</h3>
      <ul>
        <li>| R$ 600,00 por integrante da equipe |</li>
        <li>| Participa√ß√£o no processo seletivo para o Bootcamp |</li>
      </ul>
      <h3>Premia√ß√£o Terceiro Lugar:</h3>
      <ul>
        <li>| R$ 300,00 por integrante da equipe |</li>
        <li>| Participa√ß√£o no processo seletivo para o Bootcamp |</li>
      </ul>
    </section>
  </body>
</html>
Links de refer√™ncia para os novos elementos sem√¢nticos do HTML 5 (Opcional)
Apesar desses artigos possu√≠rem uma vers√£o em portugu√™s, recomendamos que voc√™ o leia em ingl√™s por ser mais completo. Todos os links devem ser consumidos apenas at√© a se√ß√£o Examples.
Estes s√£o alguns dos elementos sem√¢nticos que voc√™ mais utilizar√° em sua jornada como pessoa desenvolvedora:
header : O elemento header representa um cabe√ßalho contendo texto introdut√≥rio. Clique no link para ler mais sobre o elemento header.
nav : O elemento nav representa um conjunto de links de navega√ß√£o. Clique no link para ler mais sobre o elemento nav.
aside : O elemento aside representa um conte√∫do √† parte. Alguns exemplos de sua utiliza√ß√£o s√£o: barras laterais e/ou conte√∫dos adjacentes √† um conte√∫do principal. Clique no link para ler mais sobre o elemento aside.
article : O elemento article representa um conte√∫do autocontido. Ou seja, todo o conte√∫do presente dentro de um article prov√™ as informa√ß√µes necess√°rias para sua compreens√£o, podendo ser reusado em outras p√°ginas. Clique no link para ler mais sobre o elemento article.
section : O elemento section representa uma se√ß√£o do documento, agrupando conte√∫dos relacionados. Clique no link para ler mais sobre o elemento section.
footer : O elemento footer representa o rodap√© do documento e/ou de uma se√ß√£o. Clique no link para ler mais sobre o elemento footer.



Vamos praticar!
Agora que voc√™ j√° entendeu o quanto de significado as tags HTML carregam, √© hora de praticarmos!
Aula ao vivo! Vamos para o Slack, onde o link estar√° dispon√≠vel.


Exerc√≠cios
A partir de agora, voc√™ sempre ver√° uma se√ß√£o mostrando como realizar o versionamento do seu c√≥digo antes da descri√ß√£o dos exerc√≠cios do dia. Ent√£o, para te ajudar a organizar seus exerc√≠cios criamos um conte√∫do focado nisso que est√° cheio de exemplos, voc√™ pode acess√°-lo aqui.
No conte√∫do que criamos, voc√™ ser√° apresentado a uma estrutura de organiza√ß√£o utilizando pastas para m√≥dulos e para blocos. Essa estrutura √© diferente da que voc√™ ver√° na se√ß√£o de versionamento do c√≥digo do conte√∫do do dia, fica a seu crit√©rio decidir qual a melhor forma de organizar seus exerc√≠cios!
Caso haja alguma d√∫vida ou voc√™ queira dar um feedback sobre esse conte√∫do, mande uma mensagem no Slack!
fundamentos
Antes de come√ßar: versionando seu c√≥digo
Para versionar seu c√≥digo, utilize o seu reposit√≥rio de exerc√≠cios. üòâ
Abaixo voc√™ vai ver exemplos de como organizar os exerc√≠cios do dia em uma branch, com arquivos e commits espec√≠ficos para cada exerc√≠cio. Voc√™ deve seguir este padr√£o para realizar os exerc√≠cios a seguir.
Abra a pasta de exerc√≠cios:
Copiar
$ cd ~/trybe-exercicios
Certifique-se de que est√° na branch main e ela est√° sincronizada com a remota. Caso voc√™ tenha arquivos modificados e n√£o comitados, dever√° fazer um commit ou checkout dos arquivos antes deste passo.
Copiar
$ git checkout main
$ git pull
A partir da main, crie uma branch com o nome exercicios/3.4 (bloco 3, dia 4)
Copiar
$ git checkout -b exercicios/3.4
Caso seja o primeiro dia deste m√≥dulo, crie um diret√≥rio para ele e o acesse na sequ√™ncia:
Copiar
$ mkdir fundamentos
$ cd fundamentos
Caso seja o primeiro dia do bloco, crie um diret√≥rio para ele e o acesse na sequ√™ncia:
Copiar
$ mkdir bloco-3-introducao-a-html-e-css
$ cd bloco-3-introducao-a-html-e-css
Crie um diret√≥rio para o dia e o acesse na sequ√™ncia:
Copiar
$ mkdir dia-4-html-semantico
$ cd dia-4-html-semantico
Os arquivos referentes aos exerc√≠cios deste dia dever√£o ficar dentro do diret√≥rio ~/trybe-exercicios/fundamentos/block-3-introducao-a-html-e-css/dia-4-html-semantico. Lembre-se de fazer commits pequenos e com mensagens bem descritivas, preferencialmente a cada exerc√≠cio resolvido.

Verifique os arquivos alterados/adicionados:
Copiar
$ git status
On branch exercicios/3.4
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

  modified:   exercicio-1

Adicione os arquivos que far√£o parte daquele commit:
Copiar
# Se quiser adicionar os arquivos individualmente
$ git add caminhoParaArquivo

# Se quiser adicionar todos os arquivos de uma vez, por√©m, atente-se
para n√£o adicionar arquivos indesejados acidentalmente
$ git add --all

Fa√ßa o commit com uma mensagem descritiva das altera√ß√µes:
Copiar
$ git commit -m "Mensagem descrevendo altera√ß√µes"
Voc√™ pode visualizar o log de todos os commits j√° feitos naquela branch com git log.
Copiar
$ git log
commit 100c5ca0d64e2b8649f48edf3be13588a77b8fa4 (HEAD -> exercicios/3.4)
Author: Tryber Bot <tryberbot@betrybe.com>
Date:   Fry Sep 27 17:48:01 2019 -0300

    Exercicio 2 - mudando o evento de click para mouseover, tirei o alert e coloquei pra quando clicar aparecer uma imagem do lado direito da tela

commit c0701d91274c2ac8a29b9a7fbe4302accacf3c78
Author: Tryber Bot <tryberbot@betrybe.com>
Date:   Fry Sep 27 16:47:21 2019 -0300

    Exercicio 2 - adicionando um alert, usando fun√ß√£o e o evento click

commit 6835287c44e9ac9cdd459003a7a6b1b1a7700157
Author: Tryber Bot <tryberbot@betrybe.com>
Date:   Fry Sep 27 15:46:32 2019 -0300

    Resolvendo o exerc√≠cio 1 usando eventListener
Agora que temos as altera√ß√µes salvas no reposit√≥rio local precisamos envi√°-las para o reposit√≥rio remoto. No primeiro envio, a branch exercicios/3.4 n√£o vai existir no reposit√≥rio remoto, ent√£o precisamos configurar o remote utilizando a op√ß√£o --set-upstream (ou -u, que √© a forma abreviada).
Copiar
$ git push -u origin exercicios/3.4
Ap√≥s realizar o passo 9, podemos abrir a Pull Request a partir do link que aparecer√° na mensagem do push no terminal, ou na p√°gina do seu reposit√≥rio de exerc√≠cios no GitHub atrav√©s de um bot√£o que aparecer√° na interface. Escolha a forma que preferir e abra a Pull Request. De agora em diante, voc√™ repetir√° o fluxo a partir do passo 7 para cada exerc√≠cio adicionado, por√©m como j√° definimos a branch remota com -u anteriormente, agora podemos simplificar os comandos para:
Copiar
# Quando quiser enviar para o reposit√≥rio remoto
$ git push

# Caso voc√™ queria sincronizar com o remoto, poder√° utilizar apenas
$ git pull
Quando terminar os exerc√≠cios, seus c√≥digos devem estar todos commitados na branch exercicios/3.4, e dispon√≠veis no reposit√≥rio remoto do GitHub. Pra finalizar, compartilhe o link da Pull Request no canal de Code Review para a monitoria e/ou colegas revisarem. Fa√ßa review voc√™ tamb√©m, lembre-se que √© muito importante para o seu desenvolvimento ler o c√≥digo de outras pessoas. ü§úüèºü§õüèº



Agora a pr√°tica
Antes de fazer os exerc√≠cios, crie um arquivo HTML na pasta exercises/introducao-a-html-e-css.4 e copie o c√≥digo abaixo:
index.html
Copiar
<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
  </head>
  <body>
    <!--insira os elementos aqui-->
  </body>
</html>
O objetivo desses exerc√≠cios √© colocar em pr√°tica o que voc√™ acabou de aprender sobre HTML sem√¢ntico.
Para tal, criaremos uma p√°gina que apresenta um dos animais mais impressionantes que existem: o Stomatopoda. A estiliza√ß√£o da p√°gina fica a seu crit√©rio. üòâ
Para uma melhor organiza√ß√£o, fa√ßa commits a cada tarefa conclu√≠da. Vamos aos exerc√≠cios:
1 - Adicione um cabe√ßalho na p√°gina contendo o t√≠tulo Soco a 80km/h: Conhe√ßa o Stomatopoda.
2 - Adicione um conjunto de links que representam a √°rea de navega√ß√£o do site.
Crie um link chamado P√°gina Inicial.
Crie um link chamado Sobre.
Crie um link chamado Contato.
3 - Crie um artigo que vai conter os fatos interessantes sobre o Stomatopoda. O artigo ter√° o subt√≠tulo Fatos sobre o Stomatopoda. Segue um site animal de inspira√ß√£o para pegar fatos.
4 - Divida o artigo em se√ß√µes, organizando-o da seguinte forma:
Uma primeira se√ß√£o contendo informa√ß√µes gerais a respeito do animal. O subt√≠tulo para essa se√ß√£o fica a seu crit√©rio. √â necess√°rio que conste nessa se√ß√£o seu nome cient√≠fico, que √© Odontodactylus scyllarus, em it√°lico. Al√©m disso, √© preciso que haja informa√ß√£o tabular a respeito de sua classifica√ß√£o cient√≠fica, em espec√≠fico: Reino, Filo, Subfilo, Classe, Subclasse e Ordem. Tais informa√ß√µes voc√™ consegue obter na Wikipedia.
As outras se√ß√µes dizem respeito aos fatos interessantes que voc√™ escolheu acerca do animal. Para cada fato escolhido voc√™ vai criar uma se√ß√£o.
Adicione, para cada se√ß√£o, um subt√≠tulo referente ao fato escolhido.
Adicione, para cada se√ß√£o, par√°grafo(s) descrevendo o fato escolhido. Destaque caracter√≠sticas impressionantes referentes ao fato que voc√™ escolheu, de forma a refor√ßar a unicidade do Stomatopoda. Por exemplo: se voc√™ criar uma se√ß√£o detalhando o soco potente do animal, seria interessante destacar a velocidade desse soco (80km/h) em negrito.
Adicione, para cada se√ß√£o, uma imagem, como forma de ilustrar o fato.
Adicione, por fim, uma se√ß√£o de refer√™ncias bibliogr√°ficas, contendo uma lista de todos os links que foram usados como base para compilar a p√°gina em quest√£o.
5 - Adicione um conte√∫do adjacente ao artigo, disponibilizando um link para este v√≠deo, que mostra o animal em a√ß√£o.
6 - Adicione um rodap√© na p√°gina, mostrando algo do g√™nero:
Copiar
"Conte√∫do compilado por <insere seu nome>, <ano atual>".
Obs: para esse exerc√≠cio, √© obrigat√≥rio fazer uso de, no m√≠nimo, 6 elementos com as seguintes tags: header, nav, article, section, h1, h2, h3, aside, footer, table e img.



Validando com CodeSniffer
Agora que voc√™ criou a p√°gina mostrando fatos interessantes a respeito do Stomatopoda, suponha que uma pessoa com defici√™ncia visual acesse sua p√°gina. Ser√° que sua p√°gina estar√° acess√≠vel para essa pessoa? ü§î
Vamos averiguar!
Entre neste site, que valida se sua p√°gina √© acess√≠vel ou n√£o. Para isso, voc√™ dever√° copiar o c√≥digo HTML e colar na caixa em baixo de "Run your code through the Sniffer".

Ao submeter o c√≥digo, voc√™ vai se deparar com erros de valida√ß√£o presentes em sua p√°gina, dando in√≠cio a seu segundo exerc√≠cio: consertar todos os erros apontados.
Para cada erro de valida√ß√£o mostrado, voc√™ tem √† disposi√ß√£o um link para a p√°gina com sua descri√ß√£o. Antes de voltar para o c√≥digo e j√° ir consertando, leia a descri√ß√£o de cada erro para entend√™-lo e poder consert√°-lo.
No fim do exerc√≠cio, al√©m de ter uma p√°gina acess√≠vel, voc√™ vai refor√ßar a pr√°tica de consertar erros, seja de valida√ß√£o (para este exerc√≠cio), seja de l√≥gica, com que voc√™ vai se deparar ao longo de sua carreira de desenvolvedor.



Validando com Lighthouse
Como alternativa, podemos usar o Lighthouse para verificar a acessibilidade e outras coisas. Para isto, abra o site que criou utilizando a extens√£o Live Server do VSCode. Iremos utilizar o DevTools do navegador Chrome para analisar a acessibilidade, seguindo os seguintes passos:
Abra o DevTools utilizando uma das seguintes formas: (OBS: Voc√™ dever√° estar na janela do navegador)
Aperte a tecla F12;
Utilize o atalho CTRL + SHIFT + I;
Atrav√©s da interface clique nos tr√™s pontos na parte superior direita da tela

 , abrir√° um menu, clique em More tools e depois em Developer Tools.
No menu superior haver√£o v√°rias abas, a que queremos se chama Lighthouse. Caso ela esteja escondida, procure por um bot√£o com o √≠cone similar a >>.
Antes de selecionar:

Depois de selecionar:

Ao fazer isso aparecer√° um painel onde √© poss√≠vel escolher o que queremos testar e gerar o relat√≥rio.
Bot√£o para gerar relat√≥rio

Sele√ß√£o de categorias

Atrav√©s do relat√≥rio podemos corrigir os problemas
Relat√≥rio

Exemplo de erro de acessibilidade




