O que vamos aprender?
Na aula de hoje, vamos aprender sobre formul√°rios em HTML, que s√£o uma forma de enviar informa√ß√µes para outra p√°gina do seu site ou para um servidor.


Voc√™ ser√° capaz de:
Criar formul√°rios em HTML com as tags: input, button, textarea, select, form.


Por que isso √© importante?
Quantas vezes voc√™ j√° se deparou com um formul√°rio de cadastro, uma p√°gina de login, ou at√© mesmo precisou enviar um arquivo para o servidor? Isso √© bem comum, n√£o √© mesmo? A tag <form> do HTML, juntamente com seus elementos, te permite criar todos esses tipos de intera√ß√£o com a pessoa usu√°ria.
Ap√≥s o curso da Trybe, no seu dia a dia de trabalho, ser√° comum encontrar tarefas que, no fim das contas, s√£o de cria√ß√£o de formul√°rio. Por isso, √© importante entender como um formul√°rio funciona.


Conte√∫dos
Agora vamos ver como criar formul√°rios em HTML, are you ready?



Parte I - Introdu√ß√£o
Neste v√≠deo, voc√™ vai aprender o que √© um formul√°rio. N√£o se preocupe com a parte sobre requisi√ß√µes GET e POST, que s√£o brevemente abordadas no v√≠deo. Esse conte√∫do ser√° visto mais √† frente em nosso curso.




Parte II - input tag, types e attributes
Agora veremos esse v√≠deo com os principais campos de entrada e exibi√ß√£o de texto de um formul√°rio.



Parte III - Criando um formul√°rio completo
Voc√™ ver√° um v√≠deo ensinando a criar um formul√°rio completo.




Como vimos no v√≠deo acima, o m√©todo .preventDefault() previne que o comportamento padr√£o de um evento seja executado. Visualize abaixo alguns exemplos de elementos e seus comportamentos:
Copiar
<a href="www.betrybe.com" target="_blank" id="href">TRYBE</a>
Esse c√≥digo gera um elemento clic√°vel que redireciona a pessoa usu√°ria para o site da Trybe. O atributo target="_blank" indica que o comportamento do elemento √© abrir o link em outra aba do navegador.
Copiar
<input type="text" id="input-text"/>
Esse c√≥digo gera uma caixa de input de texto. O comportamento desse elemento √© capturar o(s) caractere(s) digitado(s) pela pessoa usu√°ria e exibi-lo(s) dentro da caixa de texto, alterando o atributo "value" do input de acordo com o que √© digitado.
Copiar
<input type="checkbox" id="input-checkbox" />
Esse c√≥digo gera um caixinha de input do tipo checkbox. O comportamento desse elemento √© escutar o clique da pessoa usu√°ria e marcar ou desmarcar a caixinha.
Para fixar:
Crie um arquivo HTML index.html
Crie um arquivo Javascript script.js
Em seu arquivo HTML
Adicione o <script src="script.js"></script> no final do body do HTML
Copie os tr√™s elementos acima (a, input type="text", checkbox) em sua p√°gina
Em seu arquivo Javascript
Adicione os seletores abaixo no come√ßo do arquivo
Copiar
// SELETORES
const INPUT_TEXT = document.querySelector("#input-text");
const INPUT_CHECKBOX = document.querySelector("#input-checkbox");
const HREF_LINK = document.querySelector("#href");
1 - Adicione um evento click no elemento a que possui o id href. Na fun√ß√£o do evento, implemente o m√©todo .preventDefault() para previnir o comportamento padr√£o do elemento. Ou seja, ao clicar no link, nada deve acontecer.
2 - Adicione um evento click no elemento checkbox que possui o id input-checkbox. Na fun√ß√£o do evento, implemente o m√©todo .preventDefault() para previnir o comportamento padr√£o do elemento. Ou seja, ao clicar na caixinha, nada deve acontecer.
3 - Adicione um evento keypress no elemento input type="text" que possui o id input-text. Na fun√ß√£o do evento, implemente o m√©todo .preventDefault() de forma que somente o caractere a (letra 'a' min√∫scula) possa ser digitado na caixinha. (dica: para capturar a tecla digitada, utilize o event.key)
Caso deseje entender melhor o comportamento do m√©todo .preventDefault(), acesse a documenta√ß√£o do MDN ou a p√°gina da w3schools.



Vamos praticar!
Agora que voc√™ j√° aprendeu sobre formul√°rios em HTML, √© hora de praticarmos!
Aula ao vivo! Vamos para o Slack, onde o link estar√° dispon√≠vel.


Exerc√≠cios
Agora que voc√™ j√° sabe como criar um formul√°rio, √© hora de colocar a m√£o na massa! üë©‚Äçüíª
fundamentos
Antes de come√ßar: versionando seu c√≥digo
Para versionar seu c√≥digo, utilize o seu reposit√≥rio de exerc√≠cios. üòâ
Abaixo voc√™ vai ver exemplos de como organizar os exerc√≠cios do dia em uma branch, com arquivos e commits espec√≠ficos para cada exerc√≠cio. Voc√™ deve seguir este padr√£o para realizar os exerc√≠cios a seguir.
Abra a pasta de exerc√≠cios:
Copiar
$ cd ~/trybe-exercicios
Certifique-se de que est√° na branch main e ela est√° sincronizada com a remota. Caso voc√™ tenha arquivos modificados e n√£o comitados, dever√° fazer um commit ou checkout dos arquivos antes deste passo.
Copiar
$ git checkout main
$ git pull
A partir da main, crie uma branch com o nome exercicios/6.1 (bloco 6, dia 1)
Copiar
$ git checkout -b exercicios/6.1
Caso seja o primeiro dia deste m√≥dulo, crie um diret√≥rio para ele e o acesse na sequ√™ncia:
Copiar
$ mkdir fundamentos
$ cd fundamentos
Caso seja o primeiro dia do bloco, crie um diret√≥rio para ele e o acesse na sequ√™ncia:
Copiar
$ mkdir bloco-6-html-e-css-forms-flexbox-e-responsivo
$ cd bloco-6-html-e-css-forms-flexbox-e-responsivo
Crie um diret√≥rio para o dia e o acesse na sequ√™ncia:
Copiar
$ mkdir dia-1-html-css-forms
$ cd dia-1-html-css-forms
Os arquivos referentes aos exerc√≠cios deste dia dever√£o ficar dentro do diret√≥rio ~/trybe-exercicios/fundamentos/block-6-html-e-css-forms-flexbox-e-responsivo/dia-1-html-css-forms. Lembre-se de fazer commits pequenos e com mensagens bem descritivas, preferencialmente a cada exerc√≠cio resolvido.

Verifique os arquivos alterados/adicionados:
Copiar
$ git status
On branch exercicios/6.1
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

  modified:   exercicio-1

Adicione os arquivos que far√£o parte daquele commit:
Copiar
# Se quiser adicionar os arquivos individualmente
$ git add caminhoParaArquivo

# Se quiser adicionar todos os arquivos de uma vez, por√©m, atente-se
para n√£o adicionar arquivos indesejados acidentalmente
$ git add --all

Fa√ßa o commit com uma mensagem descritiva das altera√ß√µes:
Copiar
$ git commit -m "Mensagem descrevendo altera√ß√µes"
Voc√™ pode visualizar o log de todos os commits j√° feitos naquela branch com git log.
Copiar
$ git log
commit 100c5ca0d64e2b8649f48edf3be13588a77b8fa4 (HEAD -> exercicios/6.1)
Author: Tryber Bot <tryberbot@betrybe.com>
Date:   Fry Sep 27 17:48:01 2019 -0300

    Exercicio 2 - mudando o evento de click para mouseover, tirei o alert e coloquei pra quando clicar aparecer uma imagem do lado direito da tela

commit c0701d91274c2ac8a29b9a7fbe4302accacf3c78
Author: Tryber Bot <tryberbot@betrybe.com>
Date:   Fry Sep 27 16:47:21 2019 -0300

    Exercicio 2 - adicionando um alert, usando fun√ß√£o e o evento click

commit 6835287c44e9ac9cdd459003a7a6b1b1a7700157
Author: Tryber Bot <tryberbot@betrybe.com>
Date:   Fry Sep 27 15:46:32 2019 -0300

    Resolvendo o exerc√≠cio 1 usando eventListener
Agora que temos as altera√ß√µes salvas no reposit√≥rio local precisamos envi√°-las para o reposit√≥rio remoto. No primeiro envio, a branch exercicios/6.1 n√£o vai existir no reposit√≥rio remoto, ent√£o precisamos configurar o remote utilizando a op√ß√£o --set-upstream (ou -u, que √© a forma abreviada).
Copiar
$ git push -u origin exercicios/6.1
Ap√≥s realizar o passo 9, podemos abrir a Pull Request a partir do link que aparecer√° na mensagem do push no terminal, ou na p√°gina do seu reposit√≥rio de exerc√≠cios no GitHub atrav√©s de um bot√£o que aparecer√° na interface. Escolha a forma que preferir e abra a Pull Request. De agora em diante, voc√™ repetir√° o fluxo a partir do passo 7 para cada exerc√≠cio adicionado, por√©m como j√° definimos a branch remota com -u anteriormente, agora podemos simplificar os comandos para:
Copiar
# Quando quiser enviar para o reposit√≥rio remoto
$ git push

# Caso voc√™ queria sincronizar com o remoto, poder√° utilizar apenas
$ git pull
Quando terminar os exerc√≠cios, seus c√≥digos devem estar todos commitados na branch exercicios/6.1, e dispon√≠veis no reposit√≥rio remoto do GitHub. Pra finalizar, compartilhe o link da Pull Request no canal de Code Review para a monitoria e/ou colegas revisarem. Fa√ßa review voc√™ tamb√©m, lembre-se que √© muito importante para o seu desenvolvimento ler o c√≥digo de outras pessoas. ü§úüèºü§õüèº



Criando um formul√°rio para concorrer a uma viagem
Imagine que voc√™ est√° surfando na internet. Voc√™ agora √© uma pessoa desenvolvedora, cansada ap√≥s finalmente terminar seus estudos e pensando nas suas maravilhosas e merecidas f√©rias.
Ent√£o, voc√™ se depara com um an√∫ncio do concurso TrybeTrip, que premia com uma viagem totalmente paga e com v√°rias op√ß√µes de destino. Como voc√™ imagina que seria a p√°gina para concorrer a essa viagem?
Concorda que seria uma esp√©cie de formul√°rio?
O exerc√≠cio hoje ser√° desenvolver uma p√°gina web com o formul√°rio da TrybeTrip. Desenvolva-o em um arquivo chamado form.html. A estrutura√ß√£o de sua p√°gina dever√° ficar semelhante com a imagem abaixo.

Formato do Formul√°rio TrybeTrip.
A imagem acima foi criada no Excalidraw, ele serve para criar diagramas e estruturas num quadro branco, muito √∫til para tirar aquela ideia de layout de sua cabe√ßa e coloc√°-la em visualiza√ß√£o. Outra ferramenta √≥tima para quem se interessa em design √© o Figma. Vale a pena dar uma olhada.
Dicas:
Crie o costume de adicionar ID's a elementos √∫nicos e classes a elementos com comportamentos similares, pois isso facilitar√° muito sua vida como pessoa desenvolvedora;
Procure saber mais sobre as Tags <label> e <fieldset> clicando nas documenta√ß√µes a seguir:
Label;
Fieldset.
O formul√°rio dever√° permitir que a pessoa usu√°ria insira os seguintes campos:
Nome Completo:
Limitado entre 10 e 40 caracteres.
E-mail:
Limitado entre 10 e 50 caracteres.
Destino Preferido:
4 op√ß√µes: Cidade, Campo, Praia, Montanhas.
Por que voc√™ deveria ser a pessoa desenvolvedora a ganhar o concurso TrybeTrip?
Limite de 500 caracteres.
Qual a melhor data para realizar sua viagem?
Gostaria de receber outras incr√≠veis oportunidades oferecidas pela Trybe?
Concordo que imagens das minhas f√©rias poder√£o ser usadas na divulga√ß√£o de concursos futuros.
Esses ser√£o os principais campos utilizadas nos pr√≥ximos exerc√≠cios.
Crie um bot√£o para enviar as informa√ß√µes preenchidas.
Agora vamos utilizar um pouco de javascript, para isso crie o arquivo script.js e o referencie no HTML.
Dica: Coloque a tag <script> no final do seu body.
Interrompa o comportamento padr√£o do bot√£o submit utilizando o m√©todo preventDefault(). Nossa amiga Carol Silva nos contou um pouco sobre como fazer isso, lembra?
Crie um bot√£o que limpe as informa√ß√µes contidas nos campos;




B√¥nus
A TrybeTrip precisa muito de fotos para divulgar seus concursos. Tendo isso em mente, fa√ßa com que somente quem autorizar o uso de imagens possa enviar suas informa√ß√µes.
Fa√ßa a valida√ß√£o dos campos com limite de caracteres. Caso n√£o estejam dentro do esperado ao clicar no bot√£o de submit, um alerta deve ser mostrado com a mensagem: 'Dados Inv√°lidos'. Caso contr√°rio, a mensagem 'Dados enviados com sucesso! Obrigado por participar do concurso TrybeTrip.' dever√° aparecer na tela.
